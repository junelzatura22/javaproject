/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialog;

import Class.Student;
import HELRER.Comp;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Dialog_Student extends javax.swing.JDialog {

    /**
     * Creates new form Dialog_Student
     */
    public Dialog_Student(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_student = new javax.swing.JTable();
        l_totalstuds = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        f_search = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Student List");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Table_student.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_student.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_studentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table_student);

        l_totalstuds.setBackground(new java.awt.Color(51, 0, 102));
        l_totalstuds.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        l_totalstuds.setForeground(new java.awt.Color(255, 255, 255));
        l_totalstuds.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_totalstuds.setText("Total Students : 0");
        l_totalstuds.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        l_totalstuds.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("------------------------------------ Double click the table to select ------------------------------------");

        jLabel3.setBackground(new java.awt.Color(0, 102, 102));
        jLabel3.setFont(new java.awt.Font("Arial Narrow", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Find_24x24.png"))); // NOI18N
        jLabel3.setText("SEARCH: ");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel3.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_totalstuds, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(l_totalstuds, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(f_search))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Table_studentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_studentMouseClicked
        if (evt.getClickCount() == 2) {
            int row = Table_student.getSelectedRow();
            String stud_fname_ = Table_student.getModel().getValueAt(row, 2).toString();
            String studentid_ = Table_student.getModel().getValueAt(row, 1).toString();
            String stud_mname_ = Table_student.getModel().getValueAt(row, 3).toString();
            String stud_lname_ = Table_student.getModel().getValueAt(row, 4).toString();

            if (student.getStudentStatus(studentid_).equals("ACTIVE")) {
                String fullName = stud_fname_ + " " + stud_mname_.substring(0, 1) + ". " + stud_lname_;
                this.setStud_fullname(fullName);
                this.setStud_id(studentid_);
                this.dispose();
            } else {
                Comp.message("Sorry! Student is not active!");
            }

        }
    }//GEN-LAST:event_Table_studentMouseClicked

    private void f_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_searchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String searchKey = f_search.getText().trim();
            if (!searchKey.equals("")) {
                searh(searchKey);
            } else {
                load();
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_f_searchKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dialog_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dialog_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dialog_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dialog_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Dialog_Student dialog = new Dialog_Student(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_student;
    private javax.swing.JTextField f_search;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_totalstuds;
    // End of variables declaration//GEN-END:variables

    Student student = new Student();
    Comp comp = new Comp();

    private void init() {

        loadTable();
        load();
        Comp.centerJDialog(this);
        comp.frameIcon(this);
        Table_student.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_studentMouseClicked(evt);
            }
        });
    }

    //Load Data
    DefaultTableModel model = new DefaultTableModel() {
        //rol and col not editable
        @Override
        public boolean isCellEditable(int row, int col) {
            return false;
        }
    };

    /*Set Custom Table Function*/
    private void loadTable() {
        Table_student = new JTable(model);
        String rowHeader[] = {"#", "STUD ID", "FIRSTNAME", "MIDDLENAME", "LASTNAME", "BOD", "ADDRESS", "ADDEDBY", "STATUS"};
        Comp.setTableHeader(rowHeader, model);//Helper class  
        int[] hidCol = {5, 6, 7};
        Comp.setHideTableColumn(Table_student, hidCol);
        String keySize[] = {"0:35", "1:60", "2:120", "3:120", "4:120", "5:95", "6:150", "7:180", "8:90"};
        Comp.keySizeCell(keySize, Table_student);
        Comp.tableAddOnss(Table_student, jScrollPane1);
    }

    public void load() {

        model.setRowCount(0);
        ArrayList listArr = student.showStudents();
        Object[] rowData = new Object[9];
        for (int x = 0; x < listArr.size(); x++) {
            rowData[0] = student.showStudents().get(x).getRowCounter();
            rowData[1] = student.showStudents().get(x).getStudentid();
            rowData[2] = student.showStudents().get(x).getStud_fname();
            rowData[3] = student.showStudents().get(x).getStud_mname();
            rowData[4] = student.showStudents().get(x).getStud_lname();
            rowData[5] = student.showStudents().get(x).getStud_bod();
            rowData[6] = student.showStudents().get(x).getStud_address();
            rowData[7] = student.showStudents().get(x).getStud_addedby();
            rowData[8] = student.showStudents().get(x).getStud_status();
            model.addRow(rowData);
        }
        l_totalstuds.setText("Total Students : " + Table_student.getRowCount());
    }
    //Search Student

    private void searh(String key) {//start
        model.setRowCount(0);
        student.searchStudent(key);
        for (Object o : student.getData()) {
            model.addRow((Vector) o);
        }
        l_totalstuds.setText("Total Student(s) : " + Table_student.getRowCount());
    }//end

    //variables
    private String stud_id, stud_fullname;

    public String getStud_id() {
        return stud_id;
    }

    public void setStud_id(String stud_id) {
        this.stud_id = stud_id;
    }

    public String getStud_fullname() {
        return stud_fullname;
    }

    public void setStud_fullname(String stud_fullname) {
        this.stud_fullname = stud_fullname;
    }

}
