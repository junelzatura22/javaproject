/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialog;

import Class.Lecture;
import HELRER.Comp;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Dialog_lecture extends javax.swing.JDialog {

    /**
     * Creates new form Dialog_lecture
     */
    public Dialog_lecture(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_lecture = new javax.swing.JTable();
        l_record = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        f_search = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lecture");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Table_lecture.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_lecture.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_lectureMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table_lecture);

        l_record.setBackground(new java.awt.Color(51, 0, 102));
        l_record.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        l_record.setForeground(new java.awt.Color(255, 255, 255));
        l_record.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_record.setText("Total Lecture Time: 0");
        l_record.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        l_record.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("------------------------------------ Double click the table to select ------------------------------------");

        jLabel3.setBackground(new java.awt.Color(0, 102, 102));
        jLabel3.setFont(new java.awt.Font("Arial Narrow", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Find_24x24.png"))); // NOI18N
        jLabel3.setText("SEARCH: ");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel3.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_record, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(l_record, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(f_search))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void f_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_searchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (f_search.getText().equals("")) {
                showLectures();
            } else {
                search(f_search.getText());
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_f_searchKeyPressed

    private void Table_lectureMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_lectureMouseClicked
        if (evt.getClickCount() == 2) {
            int row = Table_lecture.getSelectedRow();
 
            String desCription = "Description: " + Table_lecture.getModel().getValueAt(row, 2).toString() + "\n"
                    + "Unit: " + Table_lecture.getModel().getValueAt(row, 3).toString() + "\n"
                    + "Lecturer: " + Table_lecture.getModel().getValueAt(row, 4).toString() + "\n"
                    + "Time Start: " + Table_lecture.getModel().getValueAt(row, 6).toString() + "\n"
                    + "Time End: " + Table_lecture.getModel().getValueAt(row, 7).toString() + "\n"
                    + "Date Schedule: " + Table_lecture.getModel().getValueAt(row, 8).toString();
            this.setLectureDescription(desCription);
            this.setLectureSubject(Table_lecture.getModel().getValueAt(row, 1).toString());
            this.setLectureId(Integer.parseInt(Table_lecture.getModel().getValueAt(row, 5).toString()));
            this.dispose();
        }
    }//GEN-LAST:event_Table_lectureMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dialog_lecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dialog_lecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dialog_lecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dialog_lecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Dialog_lecture dialog = new Dialog_lecture(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_lecture;
    private javax.swing.JTextField f_search;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_record;
    // End of variables declaration//GEN-END:variables
    private Lecture lecture;
    Comp comp = new Comp();
    private int lectureId;
    private String lectureDescription, lectureSubject;

    private void init() {
        Comp.centerJDialog(this);
        comp.frameIcon(this);
        lecture = new Lecture();
        loadTable();
        showLectures();
        Table_lecture.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_lectureMouseClicked(evt);
            }
        });

    }

    DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /*Set Custom Table Function*/
    private void loadTable() {
        Table_lecture = new JTable(model);
        String rowHeader[] = {"#", "Subject Code", "Description", "Unit", "Name", "lectureid", "Time Start", "Time End", "Date Schedule", "dateadded", "lec_id"};
        Comp.setTableHeader(rowHeader, model);//Helper class  
        int[] hidCol = {5, 9, 10};
        Comp.setHideTableColumn(Table_lecture, hidCol);
        String keySize[] = {"0:30", "1:100", "2:200", "3:50", "4:150", "6:80", "7:80", "8:120"};
        Comp.keySizeCell(keySize, Table_lecture);
        Comp.tableAddOnss(Table_lecture, jScrollPane1);
    }

    private void showLectures() {//Start function
        model.setRowCount(0);
        lecture.showLecture();
        for (Object data : lecture.getData()) {
            model.addRow((Vector) data);
        }
        l_record.setText("Total Lecture Time: " + Table_lecture.getRowCount());

    }//end function

    private void search(String key) {//Start function
        model.setRowCount(0);
        lecture.searchLecture(key);
        for (Object data : lecture.getData()) {
            model.addRow((Vector) data);
        }
        l_record.setText("Total Lecture Time: " + Table_lecture.getRowCount());

    }//end function

    public int getLectureId() {
        return lectureId;
    }

    public void setLectureId(int lectureId) {
        this.lectureId = lectureId;
    }

    public String getLectureDescription() {
        return lectureDescription;
    }

    public void setLectureDescription(String lectureDescription) {
        this.lectureDescription = lectureDescription;
    }

    public String getLectureSubject() {
        return lectureSubject;
    }

    public void setLectureSubject(String lectureSubject) {
        this.lectureSubject = lectureSubject;
    }

}
