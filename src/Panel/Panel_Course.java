/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panel;

import Class.Course;
import Dialog.ReportJDBCD;
import HELRER.Comp;
import HELRER.Functions;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Panel_Course extends javax.swing.JPanel {

    /**
     * Creates new form Panel_dashboard
     */
    public Panel_Course() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        Table_course = new javax.swing.JTable();
        l_totalcourse = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        f_coursename = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        List_department = new javax.swing.JComboBox<>();
        btn_new = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        f_description = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        List_enrolledSubject = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btn_refresh = new javax.swing.JButton();
        f_search = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(887, 585));

        Table_course.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table_course);

        l_totalcourse.setBackground(new java.awt.Color(51, 0, 102));
        l_totalcourse.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        l_totalcourse.setForeground(new java.awt.Color(255, 255, 255));
        l_totalcourse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_totalcourse.setText("Total Course: 0");
        l_totalcourse.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        l_totalcourse.setOpaque(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Course Registration..."));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("*Course: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        f_coursename.setColumns(5);
        f_coursename.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(f_coursename, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("*Description: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("*Institure/Dept: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        List_department.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[ SELECT ]", "ICT DEPT", "ENGINEERING DEPT", "HUMAN RESOURCE DEPT", "MATHEMATICS DEPT", "SCIENCE DEPT", "NURSING DEPT" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(List_department, gridBagConstraints);

        btn_new.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Add_16x16.png"))); // NOI18N
        btn_new.setText("New");
        btn_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btn_new, gridBagConstraints);

        btn_edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Edit_16x16.png"))); // NOI18N
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btn_edit, gridBagConstraints);

        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Save_16x16.png"))); // NOI18N
        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btn_save, gridBagConstraints);

        btn_cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Remove_16x16.png"))); // NOI18N
        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btn_cancel, gridBagConstraints);

        btn_clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/cross_2.png"))); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btn_clear, gridBagConstraints);

        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/bin_2.png"))); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btn_delete, gridBagConstraints);

        btn_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Print_16x16.png"))); // NOI18N
        btn_print.setText("Print/Preview");
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btn_print, gridBagConstraints);

        f_description.setColumns(20);
        f_description.setLineWrap(true);
        f_description.setRows(5);
        f_description.setTabSize(0);
        f_description.setWrapStyleWord(true);
        f_description.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                f_descriptionKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(f_description);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jScrollPane3, gridBagConstraints);

        List_enrolledSubject.setBackground(new java.awt.Color(18, 105, 211));
        List_enrolledSubject.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        List_enrolledSubject.setForeground(new java.awt.Color(255, 255, 255));
        List_enrolledSubject.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        List_enrolledSubject.setFixedCellHeight(20);
        List_enrolledSubject.setSelectionBackground(new java.awt.Color(255, 255, 255));
        List_enrolledSubject.setSelectionForeground(new java.awt.Color(102, 102, 102));
        jScrollPane2.setViewportView(List_enrolledSubject);

        jLabel7.setBackground(new java.awt.Color(22, 70, 199));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("******* Enrollees *******");
        jLabel7.setOpaque(true);

        jLabel10.setBackground(new java.awt.Color(0, 102, 102));
        jLabel10.setFont(new java.awt.Font("Arial Narrow", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Find_24x24.png"))); // NOI18N
        jLabel10.setText("SEARCH COURSE: ");
        jLabel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel10.setOpaque(true);

        btn_refresh.setBackground(new java.awt.Color(243, 45, 63));
        btn_refresh.setFont(new java.awt.Font("Arial Narrow", 1, 11)); // NOI18N
        btn_refresh.setForeground(new java.awt.Color(255, 255, 255));
        btn_refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Synchronize_16x16.png"))); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.setContentAreaFilled(false);
        btn_refresh.setOpaque(true);
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        f_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                f_searchKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_totalcourse, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_refresh))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(l_totalcourse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btn_refresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(f_search))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        btn_function(evt);
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        btn_function(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        btn_function(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        btn_function(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        btn_function(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_printActionPerformed

    private void f_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_searchKeyPressed
        //
    }//GEN-LAST:event_f_searchKeyPressed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        btn_function(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newActionPerformed
        btn_function(evt);        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_btn_newActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        btn_function(evt);        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void f_descriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_descriptionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            List_department.requestFocus();
        }
    }//GEN-LAST:event_f_descriptionKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> List_department;
    private javax.swing.JList<String> List_enrolledSubject;
    private javax.swing.JTable Table_course;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_new;
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_save;
    private javax.swing.JTextField f_coursename;
    private javax.swing.JTextArea f_description;
    private javax.swing.JTextField f_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel l_totalcourse;
    // End of variables declaration//GEN-END:variables

    private Course course;
    private Comp comp;
    private Functions function;

    private void init() {
        course = new Course();
        comp = new Comp();
        function = new Functions();
        //
        loadTable();
        showCourses();
        tableListener();
        //
        btnDefault();

        f_search.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent ke) {
                if (ke.getKeyCode() == KeyEvent.VK_ENTER) {
                    if (f_search.getText().equals("")) {
                        showCourses();
                    } else {
                        searchCourses(f_search.getText());
                    }
                }

            }

        });
    }
    private String schoolYear, semester;
    private byte _userId, _courseId;

    public byte getUserId() {
        return _userId;//active
    }

    public void setUserId(byte _userId) {
        this._userId = _userId;
    }

    public String getSemester() {
        return semester;
    }

    public void setSemester(String semester) {
        this.semester = semester;
    }

    public void setSchoolYear(String sy) {
        this.schoolYear = sy;
    }

    public String getSchoolYear() {
        return schoolYear;
    }

    public void loadUserCredentials() {
        _userId = getUserId();
        schoolYear = getSchoolYear();
        semester = getSemester();
        //load the summary
        loadCourseSummary(schoolYear, semester);
    }
    DefaultListModel modelList;

    private void loadCourseSummary(String schoolYear, String semester) {

        ArrayList<Course> myCourse = course.loadCourseSummary(schoolYear, semester);
        modelList = new DefaultListModel();
        //java enhanced loop
        for (Course myCourse1 : myCourse) {
            modelList.addElement(myCourse1.getC_name());
        }
        List_enrolledSubject.setModel(modelList);
    }

    private void btn_function(ActionEvent evt) {
        if (evt.getSource() == btn_new) {
            btnNew();
        } else if (evt.getSource() == btn_save) {
            insert();
        } else if (evt.getSource() == btn_edit) {
            update();
        } else if (evt.getSource() == btn_delete) {
            delete();
        } else if (evt.getSource() == btn_clear) {
            clear();
        } else if (evt.getSource() == btn_refresh) {
            showCourses();
            f_search.setText("");
            f_search.requestFocus();
        } else if (evt.getSource() == btn_cancel) {
            btnDefault();
            clear();
            showCourses();
        } else {
            printCourses();
        }
    }

    /*Insert Course*/
    private void insert() {//Start
        //validate

        String _c_name = f_coursename.getText().toUpperCase().trim();
        String _c_description = f_description.getText().toUpperCase().trim();
        String _c_department = List_department.getSelectedItem().toString();
        byte _c_addedby = _userId;
        if (_c_name.equals("")
                || _c_description.equals("")
                || _c_department.equals("[ SELECT ]")) {
            Comp.message("Please fill all the required fields!");
        } else {
            //insert
            course.setC_name(_c_name);
            course.setC_description(_c_description);
            course.setC_department(_c_department);
            course.setC_addedby(_c_addedby);
            course.insertCourse();
            clear();
        }

    }//End

    /*Update Course*/
    private void update() {//Start
        //validate
        String _c_name = f_coursename.getText().toUpperCase().trim();
        String _c_description = f_description.getText().toUpperCase().trim();
        String _c_department = List_department.getSelectedItem().toString();
        byte _c_addedby = _userId;
        if (_c_name.equals("")
                || _c_description.equals("")
                || _c_department.equals("[ SELECT ]")) {
            Comp.message("Please fill all the required fields!");
        } else {
            //insert
            course.setC_name(_c_name);
            course.setC_description(_c_description);
            course.setC_department(_c_department);
            course.setC_addedby(_c_addedby);
            course.setCourseid(_courseId);
            course.updateCourse();
            clear();
        }

    }//End

    /*Update Course*/
    private void delete() {//Start
        //validate
        String _c_name = f_coursename.getText().toUpperCase().trim();
        String _c_description = f_description.getText().toUpperCase().trim();
        String _c_department = List_department.getSelectedItem().toString();
        if (_c_name.equals("")
                || _c_description.equals("")
                || _c_department.equals("[ SELECT ]")) {
            Comp.message("Please fill all the required fields!");
        } else {
            //insert
            course.setCourseid(_courseId);
            course.deleteCourse();
            clear();
        }

    }//End

    private void clear() {
        f_coursename.setText("");
        f_coursename.requestFocus();
        //
        f_description.setText("");
        f_search.setText("");
        List_department.setSelectedIndex(0);
        _courseId = 0;
        showCourses();
    }

    DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            //return column < 0
            return false;
        }
    };

    /*Set Custom Table Function*/
    private void loadTable() {//start
        Table_course = new JTable(model);
        String rowHeader[] = {"#", "COURSEID", "Course", "Description", "Department", "addedby"};
        Comp.setTableHeader(rowHeader, model);//Helper class  
        int[] hidCol = {1, 5};
        Comp.setHideTableColumn(Table_course, hidCol);
        String keySize[] = {"0:50", "2:120", "3:330", "4:135"};
        Comp.keySizeCell(keySize, Table_course);
        Comp.tableAddOnss(Table_course, jScrollPane1);
    }//end

    /*show courses*/
    private void showCourses() {
        model.setRowCount(0);
        course.showCourse();
        for (Object data : course.getData()) {
            model.addRow((Vector) data);
        }
        l_totalcourse.setText("Total Course: " + Table_course.getRowCount());
    }

    /*search courses*/
    private void searchCourses(String key) {
        model.setRowCount(0);
        course.searchCourse(key);
        for (Object data : course.getData()) {
            model.addRow((Vector) data);
        }
        l_totalcourse.setText("Total Course: " + Table_course.getRowCount());
    }

    private void tableListener() {

        //Mouse Clicked
        Table_course.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                int row = Table_course.getSelectedRow();

                _courseId = Byte.parseByte(Table_course.getModel().getValueAt(row, 1).toString());
                f_coursename.setText(Table_course.getModel().getValueAt(row, 2).toString());
                f_description.setText(Table_course.getModel().getValueAt(row, 3).toString());
                List_department.setSelectedItem(Table_course.getModel().getValueAt(row, 4).toString());
                //
                btnEdit();
            }
        });

        //Keyboard
        Table_course.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
                    int row = Table_course.getSelectedRow();

                    _courseId = Byte.parseByte(Table_course.getModel().getValueAt(row, 1).toString());
                    f_coursename.setText(Table_course.getModel().getValueAt(row, 2).toString());
                    f_description.setText(Table_course.getModel().getValueAt(row, 3).toString());
                    List_department.setSelectedItem(Table_course.getModel().getValueAt(row, 4).toString());
                    //
                    btnEdit();
                }

            }
        });
    }

    private void btnDefault() {
        f_coursename.setEnabled(false);
        f_description.setEnabled(false);
        List_department.setEnabled(false);
        //button
        btn_new.setEnabled(true);
        btn_save.setEnabled(false);
        btn_delete.setEnabled(false);
        btn_edit.setEnabled(false);
        btn_clear.setEnabled(false);
        btn_cancel.setEnabled(false);
        btn_print.setEnabled(true);
    }

    private void btnNew() {//Start
        f_coursename.setEnabled(true);
        f_description.setEnabled(true);
        List_department.setEnabled(true);
        //button
        btn_new.setEnabled(false);
        btn_save.setEnabled(true);
        btn_delete.setEnabled(false);
        btn_edit.setEnabled(false);
        btn_clear.setEnabled(true);
        btn_cancel.setEnabled(true);
        btn_print.setEnabled(false);
    }//end

    private void btnEdit() {//Start
        f_coursename.setEnabled(true);
        f_description.setEnabled(true);
        List_department.setEnabled(true);
        //button
        btn_new.setEnabled(false);
        btn_save.setEnabled(false);
        btn_delete.setEnabled(true);
        btn_edit.setEnabled(true);
        btn_clear.setEnabled(false);
        btn_cancel.setEnabled(true);
        btn_print.setEnabled(false);
    }//end

    private void printCourses() {
        try {
            String reportDIR = System.getProperty("user.dir") + "/src/Report/courses.jrxml";
            HashMap map = new HashMap();
            map.put("sy", "SY: " + schoolYear + " Semester: " + semester);
            map.put("semester", semester);
            map.put("schoolYear", schoolYear);
            ReportJDBCD rep = new ReportJDBCD(reportDIR, map);
            rep.show();
        } catch (NullPointerException e) {
        }
    }
}
