/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panel;

import Class.Subjects;
import Dialog.ReportJDBCD;
import HELRER.Comp;
import HELRER.Functions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Panel_Subject extends javax.swing.JPanel {

    /**
     * Creates new form Panel_dashboard
     */
    public Panel_Subject() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        Table_subject = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        List_enrolledSubject = new javax.swing.JList<>();
        l_totalsubject = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        f_subjectcode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        List_department = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        f_unit = new javax.swing.JTextField();
        btn_new = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        btn_preview = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        f_description = new javax.swing.JTextArea();
        btn_refresh = new javax.swing.JButton();
        f_search = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(845, 585));

        Table_subject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_subject.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Table_subjectKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Table_subject);

        jLabel7.setBackground(new java.awt.Color(29, 80, 169));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("******* Total Enrolless/Subject   *******");
        jLabel7.setOpaque(true);

        List_enrolledSubject.setBackground(new java.awt.Color(18, 105, 211));
        List_enrolledSubject.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        List_enrolledSubject.setForeground(new java.awt.Color(255, 255, 255));
        List_enrolledSubject.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        List_enrolledSubject.setFixedCellHeight(20);
        List_enrolledSubject.setSelectionBackground(new java.awt.Color(255, 255, 255));
        List_enrolledSubject.setSelectionForeground(new java.awt.Color(102, 102, 102));
        jScrollPane2.setViewportView(List_enrolledSubject);

        l_totalsubject.setBackground(new java.awt.Color(51, 0, 102));
        l_totalsubject.setFont(new java.awt.Font("Arial Narrow", 1, 11)); // NOI18N
        l_totalsubject.setForeground(new java.awt.Color(255, 255, 255));
        l_totalsubject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_totalsubject.setText("Total Subjects: 0");
        l_totalsubject.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        l_totalsubject.setOpaque(true);

        jLabel2.setBackground(new java.awt.Color(0, 102, 102));
        jLabel2.setFont(new java.awt.Font("Arial Narrow", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Find_24x24.png"))); // NOI18N
        jLabel2.setText("SEARCH COURSE DESCRIPTION: ");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel2.setOpaque(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Course Registration..."));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("*Subject Code: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel1.add(jLabel1, gridBagConstraints);

        f_subjectcode.setColumns(5);
        f_subjectcode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(f_subjectcode, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("*Unit: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("*Institure/Dept: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel1.add(jLabel5, gridBagConstraints);

        List_department.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[ SELECT ]", "ICT DEPT", "ENGINEERING DEPT", "HUMAN RESOURCE DEPT", "MATHEMATICS DEPT", "SCIENCE DEPT", "NURSING DEPT" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(List_department, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 0, 51));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("*Description: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel1.add(jLabel10, gridBagConstraints);

        f_unit.setColumns(3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(f_unit, gridBagConstraints);

        btn_new.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Add_16x16.png"))); // NOI18N
        btn_new.setText("New");
        btn_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 3, 1, 3);
        jPanel1.add(btn_new, gridBagConstraints);

        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Save_16x16.png"))); // NOI18N
        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 3, 1, 3);
        jPanel1.add(btn_save, gridBagConstraints);

        btn_edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Edit_16x16.png"))); // NOI18N
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 3, 1, 3);
        jPanel1.add(btn_edit, gridBagConstraints);

        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/bin_2.png"))); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 3, 1, 3);
        jPanel1.add(btn_delete, gridBagConstraints);

        btn_cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Remove_16x16.png"))); // NOI18N
        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(btn_cancel, gridBagConstraints);

        btn_preview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Print_16x16.png"))); // NOI18N
        btn_preview.setText("Print/Prev");
        btn_preview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_previewActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(btn_preview, gridBagConstraints);

        btn_clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/cross_2.png"))); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(btn_clear, gridBagConstraints);

        f_description.setColumns(20);
        f_description.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        f_description.setLineWrap(true);
        f_description.setRows(5);
        f_description.setTabSize(0);
        f_description.setWrapStyleWord(true);
        f_description.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                f_descriptionKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(f_description);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 28;
        jPanel1.add(jScrollPane3, gridBagConstraints);

        btn_refresh.setBackground(new java.awt.Color(243, 45, 63));
        btn_refresh.setFont(new java.awt.Font("Arial Narrow", 1, 11)); // NOI18N
        btn_refresh.setForeground(new java.awt.Color(255, 255, 255));
        btn_refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Synchronize_16x16.png"))); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.setContentAreaFilled(false);
        btn_refresh.setOpaque(true);
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        f_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                f_searchKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(l_totalsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f_search))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f_search))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l_totalsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(btn_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        btn_function(evt);
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        btn_function(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        btn_function(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        btn_function(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_previewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_previewActionPerformed
        btn_function(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_previewActionPerformed

    private void f_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_f_searchActionPerformed

    private void f_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_searchKeyPressed
        //
    }//GEN-LAST:event_f_searchKeyPressed

    private void Table_subjectKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_subjectKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_subjectKeyReleased

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed

        btn_function(evt);
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        btn_function(evt);
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newActionPerformed
        btn_function(evt);
    }//GEN-LAST:event_btn_newActionPerformed

    private void f_descriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_descriptionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            f_unit.requestFocus();
        }
    }//GEN-LAST:event_f_descriptionKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> List_department;
    private javax.swing.JList<String> List_enrolledSubject;
    private javax.swing.JTable Table_subject;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_new;
    private javax.swing.JButton btn_preview;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_save;
    private javax.swing.JTextArea f_description;
    private javax.swing.JTextField f_search;
    private javax.swing.JTextField f_subjectcode;
    private javax.swing.JTextField f_unit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel l_totalsubject;
    // End of variables declaration//GEN-END:variables

    Subjects subjects;
    Comp comp;
    Functions function;

    private void init() {
        subjects = new Subjects();
        comp = new Comp();
        function = new Functions();
        //
        loadTable();
        showSubjects();
        //table listeners
        tableListerners();
        //buttons
        btnDefault();

        f_search.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent ke) {
                if (ke.getKeyCode() == KeyEvent.VK_ENTER) {
                    String searchKey = f_search.getText();
                    if (searchKey.equals("")) {
                        showSubjects();
                    } else {
                        searchSubjects(searchKey);
                    }
                }
            }

        });
    }

    private String schoolYear, semester;
    private byte _userId;

    public byte getUserId() {
        return _userId;//active
    }

    public void setUserId(byte _userId) {
        this._userId = _userId;
    }

    public String getSchoolYear() {
        return schoolYear;
    }

    public void setSchoolYear(String inclusiveYear) {
        this.schoolYear = inclusiveYear;
    }

    public String getSemester() {
        return semester;
    }

    public void setSemester(String semester) {
        this.semester = semester;
    }

    public void loadUserCredentials() {
        _userId = getUserId();
        schoolYear = getSchoolYear();
        semester = getSemester();
        //load 
        loadEnrolless();
    }

    DefaultListModel listModel;

    private void loadEnrolless() {//start
        listModel = new DefaultListModel();
        subjects.totalStudentPerSubject(schoolYear, semester);
        for (Object c : subjects.getData()) {
            listModel.addElement(c.toString().replace("[", "").replace("]", ""));
            List_enrolledSubject.setModel(listModel);
        }

    }//end

    private void btn_function(ActionEvent evt) {

        if (evt.getSource() == btn_new) {
            btnNew();
        } else if (evt.getSource() == btn_save) {
            insert();

        } else if (evt.getSource() == btn_edit) {
            update();
        } else if (evt.getSource() == btn_delete) {
            delete();
        } else if (evt.getSource() == btn_cancel) {
            btnDefault();
            clear();
        } else if (evt.getSource() == btn_refresh) {
            f_search.requestFocus();
            f_search.setText("");
            showSubjects();
        } else if (evt.getSource() == btn_clear) {
            clear();
        } else {
            //print preview
            printSubjects();
        }
    }

    private void insert() {
        String sub_code = f_subjectcode.getText().toUpperCase().trim();
        String sub_description = f_description.getText().toUpperCase().trim();
        String sub_unit = f_unit.getText().toUpperCase().trim();
        byte sub_addedby = _userId;
        String sub_dateAdded = Functions.getTimeFormatSQL() + " " + Functions.getTimeHHMMSS();
        String sub_department = List_department.getSelectedItem().toString();
        if (sub_code.equals("")
                || sub_description.equals("")
                || sub_unit.equals("")
                || sub_department.equals("[ SELECT ]") //or you can use List_department.getSelectedIndex() == 0
                ) {
            Comp.message("Please fill all the required (*) fields!");
        } else {
            //do insert here
            subjects.setSub_code(sub_code);
            subjects.setSub_description(sub_description);
            subjects.setSub_unit(sub_unit);
            subjects.setSub_addedby(sub_addedby);
            subjects.setSub_dateAdded(sub_dateAdded);
            subjects.setSub_department(sub_department);
            subjects.insertSubjects();
            clear();
            showSubjects();
        }
    }

    private void update() {
        String sub_code = f_subjectcode.getText().toUpperCase().trim();
        String sub_description = f_description.getText().toUpperCase().trim();
        String sub_unit = f_unit.getText().toUpperCase().trim();
        byte sub_addedby = _userId;
        String sub_department = List_department.getSelectedItem().toString();
        if (sub_code.equals("")
                || sub_description.equals("")
                || sub_unit.equals("")
                || sub_department.equals("[ SELECT ]") //or you can use List_department.getSelectedIndex() == 0
                ) {
            Comp.message("Please fill all the required (*) fields!");
        } else {
            //do insert here
            subjects.setSub_code(sub_code);
            subjects.setSub_description(sub_description);
            subjects.setSub_unit(sub_unit);
            subjects.setSub_addedby(sub_addedby);
            subjects.setSub_department(sub_department);
            subjects.updateSubjects();
            clear();
            showSubjects();
        }
    }

    private void delete() {
        String sub_code = f_subjectcode.getText().toUpperCase().trim();
        String sub_description = f_description.getText().toUpperCase().trim();
        String sub_unit = f_unit.getText().toUpperCase().trim();
        String sub_department = List_department.getSelectedItem().toString();
        if (sub_code.equals("")
                || sub_description.equals("")
                || sub_unit.equals("")
                || sub_department.equals("[ SELECT ]") //or you can use List_department.getSelectedIndex() == 0
                ) {
            Comp.message("Please fill all the required (*) fields!");
        } else {
            //do insert here
            subjects.setSub_code(sub_code);
            subjects.deleteSubjects();
            clear();
            showSubjects();
        }
    }

    private void clear() {
        f_search.setText("");
        f_subjectcode.setText("");
        f_subjectcode.requestFocus();
        f_description.setText("");
        f_unit.setText("");
        List_department.setSelectedIndex(0);
        //
        showSubjects();
    }

    //Load Data
    DefaultTableModel model = new DefaultTableModel() {
        //rol and col not editable
        @Override
        public boolean isCellEditable(int row, int col) {
            return false;
        }
    };

    /*Set Custom Table Function*/
    private void loadTable() {
        Table_subject = new JTable(model);
        String rowHeader[] = {"#", "CODE", "DESCRIPTION", "UNIT", "DATEADDED", "DEPARTMENT", "ADDEDBY"};
        Comp.setTableHeader(rowHeader, model);//Helper class  
        int[] hidCol = {4, 6};
        Comp.setHideTableColumn(Table_subject, hidCol);
        String keySize[] = {"0:35", "1:80", "2:200", "3:40", "4:120", "5:150"};
        Comp.keySizeCell(keySize, Table_subject);
        Comp.tableAddOnss(Table_subject, jScrollPane1);
    }

    private void showSubjects() {
        model.setRowCount(0);
        subjects.showSubjects();
        for (Object object : subjects.getData()) {
            model.addRow((Vector) object);
        }
        l_totalsubject.setText("Total Subjects: " + Table_subject.getRowCount());
    }

    private void searchSubjects(String _search) {
        model.setRowCount(0);
        subjects.searchSubjects(_search);
        for (Object object : subjects.getData()) {
            model.addRow((Vector) object);
        }
        l_totalsubject.setText("Total Subjects: " + Table_subject.getRowCount());
    }

    //Mouse and Key Listerns
    private void tableListerners() {//start
        //Mouse Function
        Table_subject.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                int row = Table_subject.getSelectedRow();
                String sub_code = Table_subject.getModel().getValueAt(row, 1).toString();
                String sub_description = Table_subject.getModel().getValueAt(row, 2).toString();
                String sub_unit = Table_subject.getModel().getValueAt(row, 3).toString();
                String sub_department = Table_subject.getModel().getValueAt(row, 5).toString();
                f_subjectcode.setText(sub_code);
                f_description.setText(sub_description);
                f_unit.setText(sub_unit);
                List_department.setSelectedItem(sub_department);
                //edit allow
                btnEdit();
            }
        });
        Table_subject.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent ke) {
                if (ke.getKeyCode() == KeyEvent.VK_UP || ke.getKeyCode() == KeyEvent.VK_DOWN) {
                    int row = Table_subject.getSelectedRow();
                    String sub_code = Table_subject.getModel().getValueAt(row, 1).toString();
                    String sub_description = Table_subject.getModel().getValueAt(row, 2).toString();
                    String sub_unit = Table_subject.getModel().getValueAt(row, 3).toString();
                    String sub_department = Table_subject.getModel().getValueAt(row, 5).toString();
                    f_subjectcode.setText(sub_code);
                    f_description.setText(sub_description);
                    f_unit.setText(sub_unit);
                    List_department.setSelectedItem(sub_department);
                }
                //edit allow
                btnEdit();
            }

        });

    }//end

    private void btnDefault() {
        f_subjectcode.setEnabled(false);
        f_description.setEnabled(false);
        f_unit.setEnabled(false);
        List_department.setEnabled(false);
        //buttons
        btn_new.setEnabled(true);
        btn_save.setEnabled(false);
        btn_delete.setEnabled(false);
        btn_edit.setEnabled(false);
        btn_clear.setEnabled(false);
        btn_cancel.setEnabled(false);
        btn_preview.setEnabled(true);
    }

    private void btnNew() {
        clear();
        f_subjectcode.setEnabled(true);
        f_description.setEnabled(true);
        f_unit.setEnabled(true);
        List_department.setEnabled(true);
        //buttons
        btn_new.setEnabled(false);
        btn_save.setEnabled(true);
        btn_edit.setEnabled(false);
        btn_delete.setEnabled(false);
        btn_clear.setEnabled(true);
        btn_cancel.setEnabled(true);
        btn_preview.setEnabled(false);
    }

    private void btnEdit() {

        f_subjectcode.setEnabled(true);
        f_description.setEnabled(true);
        f_unit.setEnabled(true);
        List_department.setEnabled(true);
        //buttons
        btn_new.setEnabled(false);
        btn_save.setEnabled(false);
        btn_edit.setEnabled(true);
        btn_delete.setEnabled(true);
        btn_clear.setEnabled(false);
        btn_cancel.setEnabled(true);
        btn_preview.setEnabled(false);
    }

    private void printSubjects() {
        try {
            String reportDIR = System.getProperty("user.dir") + "/src/Report/subjects.jrxml";
            HashMap map = new HashMap();
            map.put("sy", "SY: " + schoolYear + " Semester: " + semester);
            map.put("semester", semester);
            map.put("schoolYear", schoolYear);
            ReportJDBCD rep = new ReportJDBCD(reportDIR, map);
            rep.show();
        } catch (NullPointerException e) {
        }
    }
}
