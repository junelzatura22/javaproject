/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panel;

import Class.Lecturer;
import Dialog.Dialog_TeacherSummary;
import Dialog.ReportDataSource;
import HELRER.Comp;
import HELRER.Functions;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Panel_Teacher extends javax.swing.JPanel {

    /**
     * Creates new form Panel_dashboard
     */
    public Panel_Teacher() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        f_id = new javax.swing.JTextField();
        f_fname = new javax.swing.JTextField();
        f_email = new javax.swing.JTextField();
        f_lname = new javax.swing.JTextField();
        f_mname = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        f_address = new javax.swing.JTextArea();
        l_lec = new javax.swing.JLabel();
        btn_save = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        btn_new = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_lecturer = new javax.swing.JTable();
        l_totalSubjects = new javax.swing.JLabel();
        l_result = new javax.swing.JLabel();
        l_totalStudents = new javax.swing.JLabel();
        btn_refresh = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btn_subjectSummary = new javax.swing.JButton();
        btn_summaryAll = new javax.swing.JButton();
        f_search = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(887, 585));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Teacher Information..."));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 51));
        jLabel2.setText("*Lecture ID: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 51));
        jLabel3.setText("*First Name: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 51));
        jLabel4.setText("*Last Name: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 51));
        jLabel5.setText("*Email: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 51));
        jLabel6.setText("Middle Name: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 51));
        jLabel7.setText("*Address: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        jPanel1.add(jLabel7, gridBagConstraints);

        f_id.setColumns(5);
        f_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f_idKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 2;
        jPanel1.add(f_id, gridBagConstraints);

        f_fname.setColumns(5);
        f_fname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f_fnameKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 2;
        jPanel1.add(f_fname, gridBagConstraints);

        f_email.setColumns(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 2;
        jPanel1.add(f_email, gridBagConstraints);

        f_lname.setColumns(5);
        f_lname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f_lnameKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 2;
        jPanel1.add(f_lname, gridBagConstraints);

        f_mname.setColumns(5);
        f_mname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f_mnameKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 2;
        jPanel1.add(f_mname, gridBagConstraints);

        f_address.setColumns(20);
        f_address.setLineWrap(true);
        f_address.setRows(5);
        f_address.setWrapStyleWord(true);
        f_address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f_addressKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(f_address);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.ipady = 2;
        jPanel1.add(jScrollPane2, gridBagConstraints);

        l_lec.setBackground(new java.awt.Color(204, 0, 0));
        l_lec.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        l_lec.setForeground(new java.awt.Color(255, 255, 255));
        l_lec.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_lec.setText("LECT-");
        l_lec.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.ipady = 2;
        jPanel1.add(l_lec, gridBagConstraints);

        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Save_16x16.png"))); // NOI18N
        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 4;
        jPanel1.add(btn_save, gridBagConstraints);

        btn_edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Edit_16x16.png"))); // NOI18N
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 4;
        jPanel1.add(btn_edit, gridBagConstraints);

        btn_clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/cross_2.png"))); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 4;
        jPanel1.add(btn_clear, gridBagConstraints);

        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/bin_2.png"))); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 7;
        jPanel1.add(btn_delete, gridBagConstraints);

        btn_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Print_16x16.png"))); // NOI18N
        btn_print.setText("Preview");
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 2;
        jPanel1.add(btn_print, gridBagConstraints);

        btn_cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Remove_16x16.png"))); // NOI18N
        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 7;
        jPanel1.add(btn_cancel, gridBagConstraints);

        btn_new.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Add_16x16.png"))); // NOI18N
        btn_new.setText("New");
        btn_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 4;
        jPanel1.add(btn_new, gridBagConstraints);

        Table_lecturer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table_lecturer);

        l_totalSubjects.setBackground(new java.awt.Color(238, 88, 13));
        l_totalSubjects.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        l_totalSubjects.setForeground(new java.awt.Color(255, 255, 255));
        l_totalSubjects.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/teacher.png"))); // NOI18N
        l_totalSubjects.setText("Total Subjects Handled: 0");
        l_totalSubjects.setOpaque(true);

        l_result.setBackground(new java.awt.Color(51, 0, 102));
        l_result.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        l_result.setForeground(new java.awt.Color(255, 255, 255));
        l_result.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_result.setText("Total Lecturers: 0");
        l_result.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        l_result.setOpaque(true);

        l_totalStudents.setBackground(new java.awt.Color(0, 102, 102));
        l_totalStudents.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        l_totalStudents.setForeground(new java.awt.Color(255, 255, 255));
        l_totalStudents.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/student1.png"))); // NOI18N
        l_totalStudents.setText("Total Students Handled: 0");
        l_totalStudents.setOpaque(true);

        btn_refresh.setBackground(new java.awt.Color(243, 45, 63));
        btn_refresh.setFont(new java.awt.Font("Arial Narrow", 1, 11)); // NOI18N
        btn_refresh.setForeground(new java.awt.Color(255, 255, 255));
        btn_refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Synchronize_16x16.png"))); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_refresh.setContentAreaFilled(false);
        btn_refresh.setOpaque(true);
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(0, 102, 102));
        jLabel10.setFont(new java.awt.Font("Arial Narrow", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Find_24x24.png"))); // NOI18N
        jLabel10.setText("SEARCH (Firstname, Lastname): ");
        jLabel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel10.setOpaque(true);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("--------------  Teacher's Summary -------------- ");

        btn_subjectSummary.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_subjectSummary.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/bookshelf.png"))); // NOI18N
        btn_subjectSummary.setText("SHOW SUBJECTS");
        btn_subjectSummary.setToolTipText("");
        btn_subjectSummary.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_subjectSummary.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_subjectSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_subjectSummaryActionPerformed(evt);
            }
        });

        btn_summaryAll.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_summaryAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/reports.png"))); // NOI18N
        btn_summaryAll.setText("Show Pivot Table of Teacher's Summary");
        btn_summaryAll.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_summaryAll.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_summaryAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_summaryAllActionPerformed(evt);
            }
        });

        f_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                f_searchKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l_totalStudents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn_subjectSummary, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_summaryAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(l_totalSubjects, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_result, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                        .addComponent(l_result, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(f_search))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_totalSubjects, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_totalStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_summaryAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_subjectSummary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        btnFunction(evt);
    }//GEN-LAST:event_btn_saveActionPerformed

    private void f_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_idKeyTyped
        Functions.integer(evt);
    }//GEN-LAST:event_f_idKeyTyped

    private void f_fnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_fnameKeyTyped
        Functions.letters(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_f_fnameKeyTyped

    private void f_mnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_mnameKeyTyped
        Functions.letters(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_f_mnameKeyTyped

    private void f_lnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_lnameKeyTyped
        Functions.letters(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_f_lnameKeyTyped

    private void f_addressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_addressKeyTyped
        //
    }//GEN-LAST:event_f_addressKeyTyped

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        btnFunction(evt);
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        btnFunction(evt);
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        btnFunction(evt);
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        btnFunction(evt);
    }//GEN-LAST:event_btn_printActionPerformed

    private void f_searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_searchKeyTyped
        //
    }//GEN-LAST:event_f_searchKeyTyped

    private void f_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_searchKeyPressed
        //
    }//GEN-LAST:event_f_searchKeyPressed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed

        btnFunction(evt);
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newActionPerformed
        btnFunction(evt);
    }//GEN-LAST:event_btn_newActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        btnFunction(evt);
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_subjectSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_subjectSummaryActionPerformed
        btnFunction(evt);
    }//GEN-LAST:event_btn_subjectSummaryActionPerformed

    private void btn_summaryAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_summaryAllActionPerformed
        btnFunction(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_summaryAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_lecturer;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_new;
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_subjectSummary;
    private javax.swing.JButton btn_summaryAll;
    private javax.swing.JTextArea f_address;
    private javax.swing.JTextField f_email;
    private javax.swing.JTextField f_fname;
    private javax.swing.JTextField f_id;
    private javax.swing.JTextField f_lname;
    private javax.swing.JTextField f_mname;
    private javax.swing.JTextField f_search;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel l_lec;
    private javax.swing.JLabel l_result;
    private javax.swing.JLabel l_totalStudents;
    private javax.swing.JLabel l_totalSubjects;
    // End of variables declaration//GEN-END:variables

    private byte _userID;
    private Lecturer lecturer;
    private String schoolYear, semester;

    private void init() {
        lecturer = new Lecturer();
        //load table properties
        loadTable();
        //load the data
        loadData();
        //Table listerner
        tableListener();
        //button default
        btnDef();

        f_search.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent ke) {
                if (ke.getKeyCode() == KeyEvent.VK_ENTER) {
                    if (f_search.getText().equals("")) {
                        clear();
                    } else {
                        search(f_search.getText());
                    }
                }
            }

        });

    }

    //load user credentials
    public void loadUserCredentials() {
        _userID = getUserID();
        schoolYear = getSchoolYear();
        semester = getSemester();
    }

    public String getSemester() {
        return semester;
    }

    public void setSemester(String semester) {
        this.semester = semester;
    }

    public void setSchoolYear(String sy) {
        this.schoolYear = sy;
    }

    public String getSchoolYear() {
        return schoolYear;
    }

    //getter and setter of user id
    public byte getUserID() {
        return _userID;
    }

    public void setUserID(byte _userID) {
        this._userID = _userID;
    }

    /*Adding new lecturer*/
    private void validateAndInsert() {

        String lecID = l_lec.getText();
        String lecIDCODE = f_id.getText().trim();
        String lec_fname = f_fname.getText().toUpperCase().trim();
        String lec_mname = f_mname.getText().toUpperCase().trim();
        String lec_lname = f_lname.getText().toUpperCase().trim();
        String lec_address = f_address.getText().toUpperCase().trim();
        String lec_email = f_email.getText().trim();
        String lec_dateAdded = Functions.getTimeFormatSQL() + " " + Functions.getTimeHHMMSS();

        if (lecIDCODE.equals("")
                || lec_fname.equals("")
                || lec_lname.equals("")
                || lec_address.equals("")
                || lec_email.equals("")) {
            Comp.message("Please fill all required(*) fields!");
        } else if (Functions.checkEmail(f_email) == false) {
            Comp.message("Please select a valid email address!");
        } else {
            //do insert
            insert(lecID + "" + lecIDCODE, lec_fname, lec_mname, lec_lname, lec_address, lec_email, _userID, lec_dateAdded);
        }

    }

    /*Adding new lecturer*/
    private void validateAndEdit() {

        String lecID = l_lec.getText();
        String lecIDCODE = f_id.getText().trim();
        String lec_fname = f_fname.getText().toUpperCase().trim();
        String lec_mname = f_mname.getText().toUpperCase().trim();
        String lec_lname = f_lname.getText().toUpperCase().trim();
        String lec_address = f_address.getText().toUpperCase().trim();
        String lec_email = f_email.getText().trim();

        if (lecIDCODE.equals("")
                || lec_fname.equals("")
                || lec_lname.equals("")
                || lec_address.equals("")
                || lec_email.equals("")) {
            Comp.message("Please fill all required(*) fields!");
        } else if (Functions.checkEmail(f_email) == false) {
            Comp.message("Please select a valid email address!");
        } else {
            //do insert
            lecturer.setLec_fname(lec_fname);
            lecturer.setLec_mname(lec_mname);
            lecturer.setLec_lname(lec_lname);
            lecturer.setLec_email(lec_email);
            lecturer.setLec_address(lec_address);
            lecturer.setLec_addedby(_userID);
            lecturer.setLec_id(lecID + "" + lecIDCODE);
            lecturer.updateLecturer();
            clear();

        }

    }

    /*Adding new lecturer*/
    private void delete() {

        String lecID = l_lec.getText();
        String lecIDCODE = f_id.getText().trim();

        if (lecIDCODE.equals("")) {
            Comp.message("Cannot find any data to delete!");
        } else {
            //do insert
            lecturer.setLec_id(lecID + "" + lecIDCODE);
            lecturer.deleteLecturer();
            clear();

        }

    }

    private void insert(String lec_id, String lec_fname, String lec_mname, String lec_lname, String lec_address, String lec_email, byte lec_addedby, String lec_dateAdded) {
        lecturer = new Lecturer(lec_id, lec_fname, lec_mname, lec_lname, lec_address, lec_email, lec_addedby, lec_dateAdded);
        lecturer.insertLecturer();
        clear();
    }

    private void btnFunction(ActionEvent evt) {
        if (evt.getSource() == btn_new) {
            btnNew();
        } else if (evt.getSource() == btn_save) {
            validateAndInsert();
            loadData();
        } else if (evt.getSource() == btn_clear) {
            clear();
        } else if (evt.getSource() == btn_delete) {
            delete();
            loadData();
        } else if (evt.getSource() == btn_cancel) {
            clear();
            btnDef();
            loadData();
        } else if (evt.getSource() == btn_refresh) {
            loadData();
            f_search.setText("");
        } else if (evt.getSource() == btn_edit) {
            validateAndEdit();
            loadData();
        } else if (evt.getSource() == btn_subjectSummary) {
            int selectedRow = Table_lecturer.getSelectedRow();
            if (selectedRow != -1) {
                summary("subject", selectedRow);
            } else {
                Comp.message("Please select teacher!");
            }

        } else if (evt.getSource() == btn_summaryAll) {
            int selectedRow = Table_lecturer.getSelectedRow();
            if (selectedRow != -1) {
                summary("all", selectedRow);
            } else {
                Comp.message("Please select teacher!");
            }
        } else {
            printDataSource();
        }

    }//emd

    public void summary(String code, int selectedRow) {

        String teacherId = Table_lecturer.getModel().getValueAt(selectedRow, 1).toString();
        String fname = (Table_lecturer.getModel().getValueAt(selectedRow, 2).toString());
        String mname = (Table_lecturer.getModel().getValueAt(selectedRow, 3).toString());
        String lname = (Table_lecturer.getModel().getValueAt(selectedRow, 4).toString());
        String teacherFullname = fname + " " + mname.substring(0, 1) + ". " + lname;
        Dialog_TeacherSummary teacherSummary;
        switch (code) {
            case "subject":
                teacherSummary = new Dialog_TeacherSummary(null, true);
                teacherSummary.setTeacherName(teacherFullname);
                teacherSummary.setSchoolYear(schoolYear);
                teacherSummary.setSemester(semester);
                teacherSummary.setTeacherId(teacherId);
                teacherSummary.setCodeToDisplay("Subject");
                teacherSummary.getAndLoad();
                teacherSummary.show();
                break;
            default:
                teacherSummary = new Dialog_TeacherSummary(null, true);
                teacherSummary.setTeacherName(teacherFullname);
                teacherSummary.setSchoolYear(schoolYear);
                teacherSummary.setSemester(semester);
                teacherSummary.setTeacherId(teacherId);
                teacherSummary.setCodeToDisplay("ALL");
                teacherSummary.getAndLoad();
                teacherSummary.show();
                break;
        }
    }

    private void clear() {
        f_id.setText("");
        f_id.requestFocus();
        f_fname.setText("");
        f_mname.setText("");
        f_lname.setText("");
        f_address.setText("");
        f_email.setText("");
        //
        f_search.setText("");
        //reload list
    }

    //Load Data
    DefaultTableModel model = new DefaultTableModel() {
        //rol and col not editable
        @Override
        public boolean isCellEditable(int row, int col) {
            return false;
        }
    };

    /*Set Custom Table Function*/
    private void loadTable() {
        Table_lecturer = new JTable(model);
        String rowHeader[] = {"#", "LEC ID", "FIRSTNAME", "MIDDLENAME", "LASTNAME",
            "ADDRESS", "EMAIL", "ADDEDBY", "DATE ADDED"};
        Comp.setTableHeader(rowHeader, model);//Helper class  
        int[] hidCol = {7, 8};
        Comp.setHideTableColumn(Table_lecturer, hidCol);
        String keySize[] = {"0:35", "1:80", "2:130", "3:130", "4:130", "5:180", "6:140"};
        Comp.keySizeCell(keySize, Table_lecturer);
        Comp.tableAddOnss(Table_lecturer, jScrollPane1);
    }

    /*load the data*/
    private void loadData() {
        model.setRowCount(0);
        lecturer.showLecturers();
        for (Object data : lecturer.getData()) {
            model.addRow((Vector) data);
        }
        l_result.setText("Total Lecturers: " + Table_lecturer.getRowCount());
    }//

    /*load the data*/
    private void search(String key) {
        model.setRowCount(0);
        lecturer.searchLecturer(key);
        for (Object data : lecturer.getData()) {
            model.addRow((Vector) data);
        }
        l_result.setText("Total Lecturers: " + Table_lecturer.getRowCount());
    }//

    //keyboard and mouse listerner
    private void tableListener() {

        Table_lecturer.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                int selectedRow = Table_lecturer.getSelectedRow();
                String newHolder[] = Table_lecturer.getModel().getValueAt(selectedRow, 1).toString().split("-");
                f_id.setText(newHolder[1]);
                f_fname.setText(Table_lecturer.getModel().getValueAt(selectedRow, 2).toString());
                f_mname.setText(Table_lecturer.getModel().getValueAt(selectedRow, 3).toString());
                f_lname.setText(Table_lecturer.getModel().getValueAt(selectedRow, 4).toString());
                f_address.setText(Table_lecturer.getModel().getValueAt(selectedRow, 5).toString());
                f_email.setText(Table_lecturer.getModel().getValueAt(selectedRow, 6).toString());
                //allow components to access
                btnEdit();
                //get all student under teacher supervision
                int totalStuds = lecturer.getTotalStudent(schoolYear, Table_lecturer.getModel().getValueAt(selectedRow, 1).toString());
                l_totalStudents.setText("Total Students Handled: " + totalStuds);
                //get all subjects handled
                int totalSubjects = lecturer.getTotalSubjects(schoolYear, Table_lecturer.getModel().getValueAt(selectedRow, 1).toString());
                l_totalSubjects.setText("Total Subjects Handled: " + totalSubjects);
            }
        });
        Table_lecturer.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
                    int selectedRow = Table_lecturer.getSelectedRow();
                    String newHolder[] = Table_lecturer.getModel().getValueAt(selectedRow, 1).toString().split("-");
                    f_id.setText(newHolder[1]);
                    f_fname.setText(Table_lecturer.getModel().getValueAt(selectedRow, 2).toString());
                    f_mname.setText(Table_lecturer.getModel().getValueAt(selectedRow, 3).toString());
                    f_lname.setText(Table_lecturer.getModel().getValueAt(selectedRow, 4).toString());
                    f_address.setText(Table_lecturer.getModel().getValueAt(selectedRow, 5).toString());
                    f_email.setText(Table_lecturer.getModel().getValueAt(selectedRow, 6).toString());
                    //allow components to access
                    btnEdit();
                    //get all student under teacher supervision
                    int totalStuds = lecturer.getTotalStudent(schoolYear, Table_lecturer.getModel().getValueAt(selectedRow, 1).toString());
                    l_totalStudents.setText("Total Students Handled: " + totalStuds);
                    //get all subjects handled
                    int totalSubjects = lecturer.getTotalSubjects(schoolYear, Table_lecturer.getModel().getValueAt(selectedRow, 1).toString());
                    l_totalSubjects.setText("Total Subjects Handled: " + totalSubjects);
                }
            }
        });
    }

    private void btnDef() {//Start
        f_id.setEnabled(false);
        f_fname.setEnabled(false);
        f_mname.setEnabled(false);
        f_lname.setEnabled(false);
        f_address.setEnabled(false);
        f_email.setEnabled(false);
        //button
        btn_new.setEnabled(true);
        btn_save.setEnabled(false);
        btn_delete.setEnabled(false);
        btn_edit.setEnabled(false);
        btn_clear.setEnabled(false);
        btn_cancel.setEnabled(false);
        btn_print.setEnabled(true);
    }//end

    private void btnNew() {//Start
        f_id.setEnabled(true);
        f_fname.setEnabled(true);
        f_mname.setEnabled(true);
        f_lname.setEnabled(true);
        f_address.setEnabled(true);
        f_email.setEnabled(true);
        //button
        btn_new.setEnabled(false);
        btn_save.setEnabled(true);
        btn_delete.setEnabled(false);
        btn_edit.setEnabled(false);
        btn_clear.setEnabled(true);
        btn_cancel.setEnabled(true);
        btn_print.setEnabled(false);
    }//end

    private void btnEdit() {//Start
        f_id.setEnabled(true);
        f_fname.setEnabled(true);
        f_mname.setEnabled(true);
        f_lname.setEnabled(true);
        f_address.setEnabled(true);
        f_email.setEnabled(true);
        //button
        btn_new.setEnabled(false);
        btn_save.setEnabled(false);
        btn_delete.setEnabled(true);
        btn_edit.setEnabled(true);
        btn_clear.setEnabled(false);
        btn_cancel.setEnabled(true);
        btn_print.setEnabled(false);
    }//end

    //Print using datasource
    private void printDataSource() {//start
        String sourceDir = System.getProperty("user.dir") + "/src/Report/teacherList.jrxml";
        HashMap map = new HashMap();
        map.put("parameter1", "SY: " + schoolYear + " Semester: " + semester);
        ReportDataSource report = new ReportDataSource(sourceDir, map, Table_lecturer);
        report.show();

    }//end

}//end class
